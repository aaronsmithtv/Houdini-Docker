name: HouDocker Autobuild

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  autobuild:
    runs-on: ubuntu-latest
    env:
      SIDEFX_CLIENT: ${{secrets.SIDEFX_CLIENT}}
      SIDEFX_SECRET: ${{secrets.SIDEFX_SECRET}}
      DOCKER_USER: ${{secrets.DOCKER_USER}}
      DOCKER_SECRET: ${{secrets.DOCKER_SECRET}}
      DOCKER_REPO: ${{secrets.DOCKER_REPO}}
    steps:
      - name: Create additional disk space
        run: sudo rm -rf /usr/share/dotnet && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./hbuild/requirements.txt
      - name: Run autobuild.py
        id: autobuild
        run: |
          export PYTHONPATH="${PYTHONPATH}:$(pwd)"
          export DOCKER_DEFAULT_PLATFORM="linux/amd64"
          python ./hbuild/autobuild.py
    outputs:
      test_status: ${{ steps.autobuild.outputs.test_status }}

  pingtest:
    needs: autobuild
    runs-on: ubuntu-latest
    env:
      DOCKER_USER: ${{secrets.DOCKER_USER}}
      DOCKER_SECRET: ${{secrets.DOCKER_SECRET}}
      DOCKER_REPO: ${{secrets.DOCKER_REPO}}
    if: needs.autobuild.outputs.test_status == 'cont'
    outputs:
      pingtest_status: ${{ steps.pingtest.outputs.status }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest tests/build/
          echo "status=success" >> $GITHUB_OUTPUT

#  hython_test:
#    needs: pingtest
#    runs-on: ubuntu-latest
#    env:
#      SIDEFX_CLIENT: ${{secrets.SIDEFX_CLIENT}}
#      SIDEFX_SECRET: ${{secrets.SIDEFX_SECRET}}
#      DOCKER_USER: ${{secrets.DOCKER_USER}}
#      DOCKER_SECRET: ${{secrets.DOCKER_SECRET}}
#      DOCKER_REPO: ${{secrets.DOCKER_REPO}}
#    if: needs.pingtest.outputs.pingtest_status == 'success'
#    steps:
#      - name: Check out repository
#        uses: actions/checkout@v4
#
#      - name: Set up Python
#        uses: actions/setup-python@v5
#        with:
#          python-version: 3.11
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Run hython tests
#        uses: nick-fields/retry@v2
#        with:
#          timeout_minutes: 10
#          max_attempts: 3
#          command: pytest tests/hython/